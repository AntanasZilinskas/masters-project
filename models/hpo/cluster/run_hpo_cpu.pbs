#!/bin/bash
#PBS -l select=1:ncpus=16:mem=64gb
#PBS -l walltime=48:00:00
#PBS -N hpo_cpu
#PBS -o hpo_cpu_${FLARE_CLASS}_${TIME_WINDOW}.out
#PBS -e hpo_cpu_${FLARE_CLASS}_${TIME_WINDOW}.err

# Initialize conda
source ~/miniforge3/etc/profile.d/conda.sh

# Change to submission directory (should be project root)
cd $PBS_O_WORKDIR

# Ensure we're in the project root by checking for key files
if [[ ! -f "models/hpo/run_hpo.py" ]]; then
    echo "Error: Not in project root directory. Expected to find models/hpo/run_hpo.py"
    echo "Current directory: $(pwd)"
    echo "Contents: $(ls -la)"
    exit 1
fi

echo "Working directory: $(pwd)"
echo "Project root confirmed"

# Activate conda environment
conda activate everest_env

# Set CPU optimization flags and Python path
export OMP_NUM_THREADS=16
export MKL_NUM_THREADS=16
export PYTHONPATH="$(pwd):$PYTHONPATH"

# Default values if not set as environment variables
FLARE_CLASS=${FLARE_CLASS:-"M"}
TIME_WINDOW=${TIME_WINDOW:-24}
MAX_TRIALS=${MAX_TRIALS:-166}

echo "Starting CPU-based HPO optimization for ${FLARE_CLASS} class, ${TIME_WINDOW}h window"
echo "Using ${OMP_NUM_THREADS} CPU threads"
echo "Max trials: $MAX_TRIALS"
echo "Conda environment: $CONDA_DEFAULT_ENV"
echo "Python path: $PYTHONPATH"

# Run HPO optimization - use python -m to ensure module path is correct
python -m models.hpo.run_hpo \
    --target single \
    --flare-class $FLARE_CLASS \
    --time-window $TIME_WINDOW \
    --max-trials $MAX_TRIALS \
    --timeout 165600 \
    --study-name "hpo_cpu_${FLARE_CLASS}_${TIME_WINDOW}h_$(date +%Y%m%d_%H%M%S)" \
    --output-dir results/hpo_cpu_${FLARE_CLASS}_${TIME_WINDOW}h

echo "CPU HPO optimization completed for ${FLARE_CLASS} class, ${TIME_WINDOW}h window" 