#!/bin/bash
#SBATCH --job-name=everest_ablation
#SBATCH --time=24:00:00
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1
#SBATCH --cpus-per-task=4
#SBATCH --mem=24G
#SBATCH --gres=gpu:1
#SBATCH --array=1-60
#SBATCH --output=logs/ablation_%A_%a.log

# EVEREST Ablation Study - SLURM Version
# This script uses SLURM syntax instead of PBS

# Load environment
module load anaconda3/personal
source activate everest_env

# Set up paths
cd $SLURM_SUBMIT_DIR
export PYTHONPATH="${SLURM_SUBMIT_DIR}:${PYTHONPATH}"

# Create logs directory
mkdir -p logs

# Define experiment configurations
VARIANTS=("full_model" "no_evidential" "no_evt" "mean_pool" "cross_entropy" "no_precursor" "fp32_training")
SEEDS=(0 1 2 3 4)
SEQ_VARIANTS=("seq_5" "seq_7" "seq_10" "seq_15" "seq_20")

# Calculate which experiment to run based on array index
ARRAY_INDEX=$((SLURM_ARRAY_TASK_ID - 1))

if [ $ARRAY_INDEX -lt 35 ]; then
    # Component ablation experiment
    VARIANT_INDEX=$((ARRAY_INDEX / 5))
    SEED_INDEX=$((ARRAY_INDEX % 5))
    
    VARIANT=${VARIANTS[$VARIANT_INDEX]}
    SEED=${SEEDS[$SEED_INDEX]}
    
    echo "Running component ablation: variant=$VARIANT, seed=$SEED"
    python -m ablation.trainer --variant $VARIANT --seed $SEED
    
else
    # Sequence length ablation experiment
    SEQ_INDEX=$(((ARRAY_INDEX - 35) / 5))
    SEED_INDEX=$(((ARRAY_INDEX - 35) % 5))
    
    SEQ_VARIANT=${SEQ_VARIANTS[$SEQ_INDEX]}
    SEED=${SEEDS[$SEED_INDEX]}
    
    echo "Running sequence ablation: sequence=$SEQ_VARIANT, seed=$SEED"
    python -m ablation.trainer --variant full_model --seed $SEED --sequence $SEQ_VARIANT
fi

echo "Job completed successfully" 