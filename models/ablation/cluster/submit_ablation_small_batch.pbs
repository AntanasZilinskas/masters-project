#!/bin/bash
#PBS -N everest_ablation_batch
#PBS -l walltime=24:00:00
#PBS -l select=1:ncpus=4:mem=24gb:ngpus=1
#PBS -q v1_gpu72
#PBS -J 1-10
#PBS -j oe
#PBS -o logs/ablation_${PBS_ARRAY_INDEX}.log

# EVEREST Ablation Study - Small Batch (10 jobs)
# This script runs a subset of ablation experiments to work within queue limits

# Load environment
module load anaconda3/personal
source activate everest_env

# Set up paths
cd $PBS_O_WORKDIR
export PYTHONPATH="${PBS_O_WORKDIR}:${PYTHONPATH}"

# Create logs directory
mkdir -p logs

echo "=== EVEREST Ablation Study Batch Job ${PBS_ARRAY_INDEX}/10 ==="
echo "Job ID: $PBS_JOBID"
echo "Array Index: $PBS_ARRAY_INDEX"
echo "Node: $(hostname)"
echo "Working Directory: $(pwd)"
echo "GPU Devices: $CUDA_VISIBLE_DEVICES"
echo "Start Time: $(date)"
echo ""

# Define experiment configurations
VARIANTS=("full_model" "no_evidential" "no_evt" "mean_pool" "cross_entropy" "no_precursor" "fp32_training")
SEEDS=(0 1 2 3 4)
SEQ_VARIANTS=("seq_5" "seq_7" "seq_10" "seq_15" "seq_20")

# For small batch, just run the first 10 component ablation experiments
# (2 variants Ã— 5 seeds = 10 jobs)
ARRAY_INDEX=$((PBS_ARRAY_INDEX - 1))  # Convert to 0-based indexing

VARIANT_INDEX=$((ARRAY_INDEX / 5))
SEED_INDEX=$((ARRAY_INDEX % 5))

VARIANT=${VARIANTS[$VARIANT_INDEX]}
SEED=${SEEDS[$SEED_INDEX]}

echo "ðŸ”¬ Running component ablation (batch mode):"
echo "   Variant: $VARIANT"
echo "   Seed: $SEED"
echo "   Batch: First 10 experiments"
echo ""

python -m ablation.trainer --variant $VARIANT --seed $SEED

echo ""
echo "âœ… Job completed successfully at $(date)" 
#PBS -N everest_ablation_batch
#PBS -l walltime=24:00:00
#PBS -l select=1:ncpus=4:mem=24gb:ngpus=1
#PBS -q v1_gpu72
#PBS -J 1-10
#PBS -j oe
#PBS -o logs/ablation_${PBS_ARRAY_INDEX}.log

# EVEREST Ablation Study - Small Batch (10 jobs)
# This script runs a subset of ablation experiments to work within queue limits

# Load environment
module load anaconda3/personal
source activate everest_env

# Set up paths
cd $PBS_O_WORKDIR
export PYTHONPATH="${PBS_O_WORKDIR}:${PYTHONPATH}"

# Create logs directory
mkdir -p logs

echo "=== EVEREST Ablation Study Batch Job ${PBS_ARRAY_INDEX}/10 ==="
echo "Job ID: $PBS_JOBID"
echo "Array Index: $PBS_ARRAY_INDEX"
echo "Node: $(hostname)"
echo "Working Directory: $(pwd)"
echo "GPU Devices: $CUDA_VISIBLE_DEVICES"
echo "Start Time: $(date)"
echo ""

# Define experiment configurations
VARIANTS=("full_model" "no_evidential" "no_evt" "mean_pool" "cross_entropy" "no_precursor" "fp32_training")
SEEDS=(0 1 2 3 4)
SEQ_VARIANTS=("seq_5" "seq_7" "seq_10" "seq_15" "seq_20")

# For small batch, just run the first 10 component ablation experiments
# (2 variants Ã— 5 seeds = 10 jobs)
ARRAY_INDEX=$((PBS_ARRAY_INDEX - 1))  # Convert to 0-based indexing

VARIANT_INDEX=$((ARRAY_INDEX / 5))
SEED_INDEX=$((ARRAY_INDEX % 5))

VARIANT=${VARIANTS[$VARIANT_INDEX]}
SEED=${SEEDS[$SEED_INDEX]}

echo "ðŸ”¬ Running component ablation (batch mode):"
echo "   Variant: $VARIANT"
echo "   Seed: $SEED"
echo "   Batch: First 10 experiments"
echo ""

python -m ablation.trainer --variant $VARIANT --seed $SEED

echo ""
echo "âœ… Job completed successfully at $(date)" 
#PBS -N everest_ablation_batch
#PBS -l walltime=24:00:00
#PBS -l select=1:ncpus=4:mem=24gb:ngpus=1
#PBS -q v1_gpu72
#PBS -J 1-10
#PBS -j oe
#PBS -o logs/ablation_${PBS_ARRAY_INDEX}.log

# EVEREST Ablation Study - Small Batch (10 jobs)
# This script runs a subset of ablation experiments to work within queue limits

# Load environment
module load anaconda3/personal
source activate everest_env

# Set up paths
cd $PBS_O_WORKDIR
export PYTHONPATH="${PBS_O_WORKDIR}:${PYTHONPATH}"

# Create logs directory
mkdir -p logs

echo "=== EVEREST Ablation Study Batch Job ${PBS_ARRAY_INDEX}/10 ==="
echo "Job ID: $PBS_JOBID"
echo "Array Index: $PBS_ARRAY_INDEX"
echo "Node: $(hostname)"
echo "Working Directory: $(pwd)"
echo "GPU Devices: $CUDA_VISIBLE_DEVICES"
echo "Start Time: $(date)"
echo ""

# Define experiment configurations
VARIANTS=("full_model" "no_evidential" "no_evt" "mean_pool" "cross_entropy" "no_precursor" "fp32_training")
SEEDS=(0 1 2 3 4)
SEQ_VARIANTS=("seq_5" "seq_7" "seq_10" "seq_15" "seq_20")

# For small batch, just run the first 10 component ablation experiments
# (2 variants Ã— 5 seeds = 10 jobs)
ARRAY_INDEX=$((PBS_ARRAY_INDEX - 1))  # Convert to 0-based indexing

VARIANT_INDEX=$((ARRAY_INDEX / 5))
SEED_INDEX=$((ARRAY_INDEX % 5))

VARIANT=${VARIANTS[$VARIANT_INDEX]}
SEED=${SEEDS[$SEED_INDEX]}

echo "ðŸ”¬ Running component ablation (batch mode):"
echo "   Variant: $VARIANT"
echo "   Seed: $SEED"
echo "   Batch: First 10 experiments"
echo ""

python -m ablation.trainer --variant $VARIANT --seed $SEED

echo ""
echo "âœ… Job completed successfully at $(date)" 