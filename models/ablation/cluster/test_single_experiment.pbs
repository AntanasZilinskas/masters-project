#!/bin/bash
#PBS -l select=1:ncpus=4:mem=24gb:ngpus=1
#PBS -l walltime=01:00:00
#PBS -N ablation_test_single
#PBS -o ablation_test_single.out
#PBS -e ablation_test_single.err

# EVEREST Ablation Study - Single Experiment Test
# Test one experiment to validate the setup

set -e  # Exit on any error

# Function to log with timestamp
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "=== EVEREST Ablation Study - Single Experiment Test ==="
log "Job ID: ${PBS_JOBID}"
log "Node: $(hostname)"

# Initialize conda
log "Initializing conda..."
source ~/miniforge3/etc/profile.d/conda.sh

# Change to submission directory
log "Changing to submission directory..."
cd $PBS_O_WORKDIR

log "Working directory: $(pwd)"
log "Directory contents:"
ls -la models/ablation/ | head -5

# Activate conda environment
log "Activating conda environment..."
conda activate everest_env

log "Conda environment: $CONDA_DEFAULT_ENV"

# Set environment variables
export CUDA_VISIBLE_DEVICES=$CUDA_VISIBLE_DEVICES
export PYTHONPATH=$PBS_O_WORKDIR:$PYTHONPATH

log "GPU device: $CUDA_VISIBLE_DEVICES"
log "Python executable: $(which python)"
log "Python version: $(python --version)"

# Test imports
log "Testing imports..."
python -c "import torch; print(f'PyTorch: {torch.__version__}')"
python -c "import models.ablation; print('Ablation imports: OK')"

# GPU validation
log "GPU validation..."
python -c "
import torch
if torch.cuda.is_available():
    print(f'GPU: {torch.cuda.get_device_name(0)}')
else:
    print('No GPU available')
    exit(1)
"

# Test data availability
log "Testing data availability..."
python -c "
from models.utils import get_training_data, get_testing_data
X_train, y_train = get_training_data('72', 'M5')
X_test, y_test = get_testing_data('72', 'M5')
print(f'Data: {len(X_train)} train, {len(X_test)} test samples')
"

# Run a single quick experiment
log "Running single test experiment..."
python models/ablation/run_ablation_hpo_style.py --variant full_model --seed 0

log "Test completed successfully!" 