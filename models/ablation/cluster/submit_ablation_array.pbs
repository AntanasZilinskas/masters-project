#!/bin/bash
#PBS -N everest_ablation
#PBS -l walltime=24:00:00
#PBS -l select=1:ncpus=4:mem=24gb:ngpus=1
#PBS -J 1-60
#PBS -j oe
#PBS -o logs/ablation_${PBS_ARRAY_INDEX}.log

# EVEREST Ablation Study - Array Job Submission
# This script runs individual ablation experiments as array jobs

# Load environment
module load anaconda3/personal
source activate everest_env

# Set up paths
cd $PBS_O_WORKDIR
export PYTHONPATH="${PBS_O_WORKDIR}:${PYTHONPATH}"

# Create logs directory
mkdir -p logs

# Define experiment configurations
# Array index maps to specific (variant, seed) combinations

# Component ablation variants (7 variants × 5 seeds = 35 jobs)
VARIANTS=("full_model" "no_evidential" "no_evt" "mean_pool" "cross_entropy" "no_precursor" "fp32_training")
SEEDS=(0 1 2 3 4)

# Sequence length variants (5 variants × 5 seeds = 25 jobs)
SEQ_VARIANTS=("seq_5" "seq_7" "seq_10" "seq_15" "seq_20")

# Calculate which experiment to run based on array index
ARRAY_INDEX=$((PBS_ARRAY_INDEX - 1))  # Convert to 0-based indexing

if [ $ARRAY_INDEX -lt 35 ]; then
    # Component ablation experiment
    VARIANT_INDEX=$((ARRAY_INDEX / 5))
    SEED_INDEX=$((ARRAY_INDEX % 5))
    
    VARIANT=${VARIANTS[$VARIANT_INDEX]}
    SEED=${SEEDS[$SEED_INDEX]}
    
    echo "Running component ablation: variant=$VARIANT, seed=$SEED"
    
    python -m ablation.trainer --variant $VARIANT --seed $SEED
    
else
    # Sequence length ablation experiment
    SEQ_INDEX=$(((ARRAY_INDEX - 35) / 5))
    SEED_INDEX=$(((ARRAY_INDEX - 35) % 5))
    
    SEQ_VARIANT=${SEQ_VARIANTS[$SEQ_INDEX]}
    SEED=${SEEDS[$SEED_INDEX]}
    
    echo "Running sequence ablation: sequence=$SEQ_VARIANT, seed=$SEED"
    
    python -m ablation.trainer --variant full_model --seed $SEED --sequence $SEQ_VARIANT
    
fi

echo "Job completed successfully" 