#!/bin/bash
#PBS -N everest_ablation_icl
#PBS -l walltime=24:00:00
#PBS -l select=1:ncpus=4:mem=24gb:ngpus=1
#PBS -q v1_gpu72
#PBS -J 1-60
#PBS -j oe
#PBS -o logs/ablation_${PBS_ARRAY_INDEX}.log

# EVEREST Ablation Study - ICL Cluster Configuration
# This script is configured specifically for the ICL cluster

# Load environment
module load anaconda3/personal
source activate everest_env

# Set up paths
cd $PBS_O_WORKDIR
export PYTHONPATH="${PBS_O_WORKDIR}:${PYTHONPATH}"

# Create logs directory
mkdir -p logs

echo "=== EVEREST Ablation Study Job ${PBS_ARRAY_INDEX}/60 ==="
echo "Job ID: $PBS_JOBID"
echo "Array Index: $PBS_ARRAY_INDEX"
echo "Node: $(hostname)"
echo "Working Directory: $(pwd)"
echo "GPU Devices: $CUDA_VISIBLE_DEVICES"
echo "Start Time: $(date)"
echo ""

# Define experiment configurations
VARIANTS=("full_model" "no_evidential" "no_evt" "mean_pool" "cross_entropy" "no_precursor" "fp32_training")
SEEDS=(0 1 2 3 4)
SEQ_VARIANTS=("seq_5" "seq_7" "seq_10" "seq_15" "seq_20")

# Calculate which experiment to run based on array index
ARRAY_INDEX=$((PBS_ARRAY_INDEX - 1))  # Convert to 0-based indexing

if [ $ARRAY_INDEX -lt 35 ]; then
    # Component ablation experiment
    VARIANT_INDEX=$((ARRAY_INDEX / 5))
    SEED_INDEX=$((ARRAY_INDEX % 5))
    
    VARIANT=${VARIANTS[$VARIANT_INDEX]}
    SEED=${SEEDS[$SEED_INDEX]}
    
    echo "üî¨ Running component ablation:"
    echo "   Variant: $VARIANT"
    echo "   Seed: $SEED"
    echo ""
    
    python -m ablation.trainer --variant $VARIANT --seed $SEED
    
else
    # Sequence length ablation experiment
    SEQ_INDEX=$(((ARRAY_INDEX - 35) / 5))
    SEED_INDEX=$(((ARRAY_INDEX - 35) % 5))
    
    SEQ_VARIANT=${SEQ_VARIANTS[$SEQ_INDEX]}
    SEED=${SEEDS[$SEED_INDEX]}
    
    echo "üìè Running sequence ablation:"
    echo "   Sequence: $SEQ_VARIANT"
    echo "   Seed: $SEED"
    echo ""
    
    python -m ablation.trainer --variant full_model --seed $SEED --sequence $SEQ_VARIANT
fi

echo ""
echo "‚úÖ Job completed successfully at $(date)" 
#PBS -N everest_ablation_icl
#PBS -l walltime=24:00:00
#PBS -l select=1:ncpus=4:mem=24gb:ngpus=1
#PBS -q v1_gpu72
#PBS -J 1-60
#PBS -j oe
#PBS -o logs/ablation_${PBS_ARRAY_INDEX}.log

# EVEREST Ablation Study - ICL Cluster Configuration
# This script is configured specifically for the ICL cluster

# Load environment
module load anaconda3/personal
source activate everest_env

# Set up paths
cd $PBS_O_WORKDIR
export PYTHONPATH="${PBS_O_WORKDIR}:${PYTHONPATH}"

# Create logs directory
mkdir -p logs

echo "=== EVEREST Ablation Study Job ${PBS_ARRAY_INDEX}/60 ==="
echo "Job ID: $PBS_JOBID"
echo "Array Index: $PBS_ARRAY_INDEX"
echo "Node: $(hostname)"
echo "Working Directory: $(pwd)"
echo "GPU Devices: $CUDA_VISIBLE_DEVICES"
echo "Start Time: $(date)"
echo ""

# Define experiment configurations
VARIANTS=("full_model" "no_evidential" "no_evt" "mean_pool" "cross_entropy" "no_precursor" "fp32_training")
SEEDS=(0 1 2 3 4)
SEQ_VARIANTS=("seq_5" "seq_7" "seq_10" "seq_15" "seq_20")

# Calculate which experiment to run based on array index
ARRAY_INDEX=$((PBS_ARRAY_INDEX - 1))  # Convert to 0-based indexing

if [ $ARRAY_INDEX -lt 35 ]; then
    # Component ablation experiment
    VARIANT_INDEX=$((ARRAY_INDEX / 5))
    SEED_INDEX=$((ARRAY_INDEX % 5))
    
    VARIANT=${VARIANTS[$VARIANT_INDEX]}
    SEED=${SEEDS[$SEED_INDEX]}
    
    echo "üî¨ Running component ablation:"
    echo "   Variant: $VARIANT"
    echo "   Seed: $SEED"
    echo ""
    
    python -m ablation.trainer --variant $VARIANT --seed $SEED
    
else
    # Sequence length ablation experiment
    SEQ_INDEX=$(((ARRAY_INDEX - 35) / 5))
    SEED_INDEX=$(((ARRAY_INDEX - 35) % 5))
    
    SEQ_VARIANT=${SEQ_VARIANTS[$SEQ_INDEX]}
    SEED=${SEEDS[$SEED_INDEX]}
    
    echo "üìè Running sequence ablation:"
    echo "   Sequence: $SEQ_VARIANT"
    echo "   Seed: $SEED"
    echo ""
    
    python -m ablation.trainer --variant full_model --seed $SEED --sequence $SEQ_VARIANT
fi

echo ""
echo "‚úÖ Job completed successfully at $(date)" 
#PBS -N everest_ablation_icl
#PBS -l walltime=24:00:00
#PBS -l select=1:ncpus=4:mem=24gb:ngpus=1
#PBS -q v1_gpu72
#PBS -J 1-60
#PBS -j oe
#PBS -o logs/ablation_${PBS_ARRAY_INDEX}.log

# EVEREST Ablation Study - ICL Cluster Configuration
# This script is configured specifically for the ICL cluster

# Load environment
module load anaconda3/personal
source activate everest_env

# Set up paths
cd $PBS_O_WORKDIR
export PYTHONPATH="${PBS_O_WORKDIR}:${PYTHONPATH}"

# Create logs directory
mkdir -p logs

echo "=== EVEREST Ablation Study Job ${PBS_ARRAY_INDEX}/60 ==="
echo "Job ID: $PBS_JOBID"
echo "Array Index: $PBS_ARRAY_INDEX"
echo "Node: $(hostname)"
echo "Working Directory: $(pwd)"
echo "GPU Devices: $CUDA_VISIBLE_DEVICES"
echo "Start Time: $(date)"
echo ""

# Define experiment configurations
VARIANTS=("full_model" "no_evidential" "no_evt" "mean_pool" "cross_entropy" "no_precursor" "fp32_training")
SEEDS=(0 1 2 3 4)
SEQ_VARIANTS=("seq_5" "seq_7" "seq_10" "seq_15" "seq_20")

# Calculate which experiment to run based on array index
ARRAY_INDEX=$((PBS_ARRAY_INDEX - 1))  # Convert to 0-based indexing

if [ $ARRAY_INDEX -lt 35 ]; then
    # Component ablation experiment
    VARIANT_INDEX=$((ARRAY_INDEX / 5))
    SEED_INDEX=$((ARRAY_INDEX % 5))
    
    VARIANT=${VARIANTS[$VARIANT_INDEX]}
    SEED=${SEEDS[$SEED_INDEX]}
    
    echo "üî¨ Running component ablation:"
    echo "   Variant: $VARIANT"
    echo "   Seed: $SEED"
    echo ""
    
    python -m ablation.trainer --variant $VARIANT --seed $SEED
    
else
    # Sequence length ablation experiment
    SEQ_INDEX=$(((ARRAY_INDEX - 35) / 5))
    SEED_INDEX=$(((ARRAY_INDEX - 35) % 5))
    
    SEQ_VARIANT=${SEQ_VARIANTS[$SEQ_INDEX]}
    SEED=${SEEDS[$SEED_INDEX]}
    
    echo "üìè Running sequence ablation:"
    echo "   Sequence: $SEQ_VARIANT"
    echo "   Seed: $SEED"
    echo ""
    
    python -m ablation.trainer --variant full_model --seed $SEED --sequence $SEQ_VARIANT
fi

echo ""
echo "‚úÖ Job completed successfully at $(date)" 