name: Simplified CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install core dependencies
      run: |
        python -m pip install --upgrade pip
        # Install minimal CI dependencies
        pip install -r tests/requirements-ci.txt
        # Install core ML dependencies for testing
        pip install numpy pandas scikit-learn tensorflow torch
        pip install optuna  # For HPO tests

    - name: Lint with flake8
      run: |
        flake8 models/ nature_models/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 models/ nature_models/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Format check with black
      run: |
        black --check --diff models/ nature_models/ tests/

    - name: Run core tests
      run: |
        pytest tests/test_*.py -v --tb=short -x

    - name: Test training config
      run: |
        python -c "
        import sys
        sys.path.append('models')
        from training.config import validate_config, get_all_experiments
        validate_config()
        experiments = get_all_experiments()
        print(f'✓ Training config valid. Found {len(experiments)} experiments.')
        "

    - name: Test ablation config
      run: |
        python -c "
        import sys
        sys.path.append('models')
        from ablation.config import validate_ablation_config
        validate_ablation_config()
        print('✓ Ablation config valid.')
        "

    - name: Test HPO config
      run: |
        python -c "
        import sys
        sys.path.append('models')
        from hpo.config import validate_hpo_config
        validate_hpo_config()
        print('✓ HPO config valid.')
        "
